server {
    listen                          80 default_server;
    listen                          [::]:80 default_server;
    server_name                     ""                      # 该配置可以匹配 "Host" Request Header 不存在的请求，用于替代 default_server
                                    _                       # 表示捕获所有域名，不能使用 * 捕获所有域名
                                    ;

    # 任何 http 协议访问当前网站，都自动转为 https 协议
    return      301 https://${host}:443${request_uri};
}


server {
    listen              443 ssl default_server;
    listen              [::]:443 ssl default_server;
    http2               on;
    server_name         ""                      # 该配置可以匹配 "Host" Request Header 不存在的请求，用于替代 default_server
                        _                       # 表示捕获所有域名，不能使用 * 捕获所有域名
                        ;

    ################################ SSL/TLS 配置 ################################
    # 证书配置
    ssl_certificate             /etc/nginx/tls/as/server.crt.pem;         # 当前 域名 对应的 证书
    ssl_certificate_key         /etc/nginx/tls/as/pvt.key.pem;            # 当前 证书 对应的 私钥
    #ssl_password_file          /etc/nginx/tls/as/pvt.key.pwd;            # 当前 私钥 对应的 密码，一行一个

    # TLS/SSL 配置
    ssl_protocols                   TLSv1.3;
    ssl_ciphers                     TLSv1.2+ECDH+ECDSA+AESGCM;      # openssl cipher string: 用于设置使用的加密套件
    ssl_ecdh_curve                  auto;       # 指定 ECDHE 运算所使用的 曲线
    ssl_prefer_server_ciphers       on;         # 优先使用服务器上配置的 加密套件
    ssl_session_timeout             8m;         # 会话过期时间


    ################################ 前端 URL 路径映射配置 ################################
    # 由于 nginx 在找不到匹配的 server 且没有配置 default_server 时，
    # 会自动选择 conf.d 下第一个(字典序) .conf 文件中的 server{} 用来响应。
    # 为了防止这种不确定性，所以额外添加了该配置文件，作为在 conf.d 的第一个 .conf 文件，来处理所有 不确定的请求
    # 对于所有不确定的请求，直接报错即可
    # Response Status Code:
    #   444       为 nginx 特有的非标准的 http status code，
    #             该 code 表示，nginx 直接关闭链接，连 response header 都不返回
    #             @deprecated 前端看不到报错，给 troubleshoot 带来巨大的麻烦
    #
    #   400       Bad Request
    #   401       Unauthorized              # 有业务含义，代表没有 login，此处不建议使用
    #   403       Forbidden                 # 有业务含义，代表没有 permission，此处不建议使用
    #   410       Gone
    #   418       I'm a teapot              # 无意义的码值
    #   422       Unprocessable Content     # 请求格式及内容正常，但是无法处理
    root            /usr/share/nginx/apps/000;           # 默认映射路径，当 location 中没有配置 root 时生效

    location / {
        try_files $uri $uri/ @default_handler;           # 判断指定文件是否存在，存在则返回，否则下一个，$uri/ 用于判断目录是否存在
        index  index.html;                               # 如果请求形如 xxx/ ，则返回 xxx/index.html
    }

    # named location
    location @default_handler {
        #add_header      Content-Type 'application/json;charset=UTF-8';                     # 无效，使用 default_type 进行配置
        default_type    text/plain;
        return          418 '{"code": "ex", "msg":"I\'m a teapot"}';      # 如果没有找到静态文件，直接返回报错
    }



}

